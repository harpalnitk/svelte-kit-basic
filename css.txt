CSS UNITS
for font-size use rems

for width use % along with max-width; ch(character; roughly equal to width of character 0) unit can also be used
in typography you do not go above 75 characters per line; less than 75 characters is preferable

height: never set height; if it has to be set use min-height

for padding or margin use rem or em; use em for padding on button

for media queries use em

WIDTH AUTO VS 100%
 on block level elements
width auto means use the available space; margin left and right are visible on viewport
width 100% with margin left or right will give rise to horizontal scrolling as block element will cover 100% width of viewport

SASS

instead of @import  use @use and @forward

abstracts
  _fonts.scss
  _colors.scss
  _index.scss
components
  _cards.scss

in _index.scss file

@forward '..abstracts/colors';
@forward '..abstracts/fonts';

in _cards.scss file

use '../absracts';

.card {
font-size: abstracts.$font-size;
color: abstracts.$blue;
}

OR

use '../absracts' as a;

.card {
font-size: a.$font-size;
color: a.$blue;
}

OR

use '../absracts' as *;

.card {
font-size: $font-size;
color: $blue;
}

HEIGHT AUTO VS 100%

height:100% is with respect to containing element of body

so we will have to first give body height of 100%

height:auto will fit contents unlike width auto which fills viewport
in height set min-height but never height

e.g. min-height:50vw




###::marker TAG : TO CHANGE COLOR AND OTHER PROPERTIES OF LIST BULLETS

<ul class='custom-marker'>
<li>Lorem ipsum</li>
<li>Lorem ipsum</li>
<li>Lorem ipsum</li>
</ul>


::marker {
color:red;
font-size: 0.5em;
font-weight: 700;
content:''; // to disappear bullet points
content:'hello'
transition: color 1s ease;
}

//TO PUT ICONS AS BULLET POINTS
{
font-family:'Font Awesome 5 Free'
content:'\f13d'
font-weight:700
}

.custom-marker > li {
padding-left : .5em;
}

li:hover::marker {
color: blue;
}


##COLORS

:root{
--ff-primary: basic-sans, sans-serif;
--clr-primary-300: #ee6352;
--clr-primary-400: #ee6352;
--clr-primary-500: #ee6352;
--clr-primary-700: #ee6352;
--spacer: 1rem;
}

:root{
--ff-primary: basic-sans, sans-serif;
--clr-primary-300: hsl(7, 82%, 83%);// First number is hue(color)//second value is saturation(light/dark)// Last value is lightness (higher the number more lightness) 
--clr-primary-400: hsl(7, 82%, 63%);
--clr-primary-500: hsl(7, 82%, 43%);
--clr-primary-700: hsl(7, 82%, 23%);
--spacer: 1rem;

//grey colors
--clr-neutral-700: hsl(0, 0%, 23%);
--clr-neutral-600: hsl(0, 0%, 33%);
--clr-neutral-500: hsl(0, 0%, 43%);
--clr-neutral-400: hsl(0, 0%, 53%);
--clr-neutral-300: hsl(0, 0%, 63%);

}

##EQUAL COLUMNS IN FLEX

<div class='equal-columns'>
<div class='col'>DIV 1</div>
<div class='col'>DIV 1</div>
<div class='card'>DIV 1</div>
<div class='col'>DIV 1</div>
</div>

.equal-columns{
display:flex;
gap: 1em;
}

.equal-columns > * {
width: 100%;
} // All direct childs to have equla width


## NAV UL VS NAV > UL

<nav class='primary-nav'>
<ul>
<li><a href='#'>Home</a></li>
<li><a href='#'>About</a></li>
<li><a href='#'>Blog</a></li>
<li><a href='#'>Contact</a></li>
</ul>
</nav>

.primary-nav ul {
list-style: none;
padding: 0;
margin: 0;
display: flex;
}

.primary-nav li {
margin: 0 3em;
}// even though list-items are not direct children

.primary-nav ul li {
margin: 0 3em;
}// same as above but more code

.primary-nav > ul > li {
margin: 0 3em;
}// same as above but more code


CSS SELECTORS

div, p	Selects all <div> elements and all <p> elements
div p Selects all <p> elements inside <div> elements
div > p Selects all <p> elements where the parent is a <div> element
div + p	Selects the first(only one) <p> element that is placed immediately after <div> elements
p ~ ul	Selects every (all) <ul> element that is preceded by a <p> element

[attribute]	[target]	Selects all elements with a target attribute
[attribute=value]	[target=_blank]	Selects all elements with target="_blank"
[title~=flower]	Selects all elements with a title attribute containing the word "flower"
[lang|=en]	Selects all elements with a lang attribute value starting with "en"
a[href^="https"]	Selects every <a> element whose href attribute value begins with "https"
a[href$=".pdf"]	Selects every <a> element whose href attribute value ends with ".pdf"
a[href*="w3schools"]	Selects every <a> element whose href attribute value contains the substring "w3schools"
a:active	Selects the active link
p::before	Insert something before the content of each <p> element
p:empty	Selects every <p> element that has no children (including text nodes)
p:first-of-type	Selects every <p> element that is the first <p> element of its parent
p:last-child	Selects every <p> element that is the last child of its parent
p:lang(it)	Selects every <p> element with a lang attribute equal to "it" (Italian)
:not(p)	Selects every element that is not a <p> element
p:nth-child(2)	Selects every <p> element that is the second child of its parent
p:nth-last-child(2)	Selects every <p> element that is the second child of its parent, counting from the last child
p:nth-of-type(2)	Selects every <p> element that is the second <p> element of its parent

BOX-SHADOW

box-shadow:offset-x|offset-y|blur-radius|spread-radius|color
box-shadow:inset offset-x|offset-y|blur-radius|spread-radius|color puts shadow inside box
box-shadow: inset 8px 10px 10px 1px rgba(0,0,0,0.5)


<div class="container">
  <div class="hero fefault">
    <div class="hero-content flow">
      <h1>The best in the west</h1>
      <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Quibusdam, eveniet!</p>
      <p>Sapiente perferendis natus nemo cupiditate a ipsam dolorem delectus minus.</p>
      <p>Aliquam natus id voluptatum, illum asperiores non sunt iure temporibus.</p>
    </div>
  </div>
</div>


/* solution to headings paragraphs collapsible margin problem */
h1,h2,h3,p{
  margin:0;
}

/* // * + * selects all childs but not the last //child 
*:not(:first-child) can also be used but it's specifity is more which can cause some problems
*/
.flow > * + * {
  margin-top: var(--flow-space, 1em);
}

.hero {
  --flow-space: 3em;
}


FONTS

CSS Font Property is used to group all font properties in one single property. Properties like font size and font family are compulsory to add, rest all are optional. Line height must come after font-size separated by slash (/).

<style>
p{ font: italic small-caps bold condensed 18px/1.4 arial}

18px/1.4 arial IS MANDATORY  18px: font-size 1.4: line-height arial:font-family

italic small-caps bold condensed IS OPTIONAL

font-style: italic/normal/oblique
font-variant: normal/small-caps
font-stretch: norma/condensed/semi-condensed/ulta-condensed/expanded/semi-expanded/ultra-expanded/extra-expanded
font_weight:normal/bold/bolder   OR 100-900
</style>

ASPECT RATIO

aspect-ratio: 1/1

if width of div is 100px this will automatically set height to 100px


html{
  scroll-behavior:smooth; // will scroll page smoothly when moving through different sections on same page
  scroll-padding-top;3rem // keeps 3rem space between section and top of page
}

section:target {
  outline: 1px dotted red;// when we move to a section it will apply dotted line of red color
}


PADDING 

section{
  padding-block: min(20vh, 20rem);
  // padding-block is same as padding top and bottom only
  // min will ensure that on small screen sizes padding top is not too much
}



##Conditional Border radius

.card {
  border-radius: max(0px, min(8px, calc((100vw - 4px - 100%) * 9999)));
}

The guts of it is the comparison between 100vw and 100%. 
Essentially, the border-radius comes out to 8px most
 of the time. But if the component becomes the same 
 width as the viewport (within 4px, but I’d say that
  part is optional), then the value of the border-radius
   becomes 0px, because the equation yields a negative
    (invalid) number.

The 9999 multiplication means that you’ll never 
get low-positive numbers. It’s a toggle. You’ll
 either get 8px or 0px and nothing in between.


####BACKGROUND

      Background is shorthand for
background-attachment  scroll,fixed,local
background-clip    border-box,padding-box,content-box,text
 background-color    rgba(255, 255, 128, .5);
 background-image   linear-gradient(rgba(0, 0, 255, 0.5), rgba(255, 255, 0, 0.5)),
                      url("../../media/examples/lizard.png");
                     The background images are drawn on stacking context layers on top of each other. The first layer specified is drawn as if it is closest to the user.

                    The borders of the element are then drawn on top of them, and the background-color is drawn beneath them. How the images are drawn relative to the box and its borders is defined by the background-clip and background-origin CSS properties.
 background-origin         border-box,padding-box,content-box
                             The background-origin CSS property sets the background's origin: from the border start, inside the border, or inside the padding.
 background-position      top,bottom,left,center,right,25% 75%
                             /* Multiple images */
                              background-position: 0 0, center;
 background-repeat           repeat-x,repeat-y,repeat,space,round,no-repeat
                                  /* Two-value syntax: horizontal | vertical */
                                     background-repeat: repeat space;
                                     By default, the repeated images are clipped to the size of the element, but they can be scaled to fit (using round) or evenly distributed from end to end (using space).
 background-size                      The background-size CSS property sets the size of the element's background image. The image can be left to its natural size, stretched, or constrained to fit the available space.
                                     cover,contain,50%(height auto),12px(height auto),50% auto,3em 25%
                                     / Multiple backgrounds */
                                       background-size: auto, auto; /* Not to be confused with `auto auto` */
                                       background-size: 50%, 25%, 25%;
                                       background-size: 6px, auto, contain;











